<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        CwAAAk1TRnQBSQFMAgEBAwEAASgBAQEoAQEBFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGbYAAxQBGwMjATQDCgENqAADCQEMAykBPgMTARowAAMHAQoDSQGJA1kByQMx
        AU5AAAJZAWQB7AEAARsBNgH/A18B4AMgAS6kAAMaASUCWgFXAcUDSgGKAw0BESwAAz0BaQMDAf8DBgH/
        A0IB9QM+AWs8AANOAZQBCQFLAZoB/wEEATYBWgH/A1cB6AMsAUSgAAM3AVsDWQHHAl8BWgHbAzUBVywA
        AyYBOANZAfIDFQH/AxsB/wMCAf8DPAFoOAADAwEEAkUBRgF+AUICWQH1AQYBPQGFAf8BGQE8AVkB/gNA
        AXEDAgEDlAADMwFSA0wBkgMcAScCVwFVAboCWwFYAcsDAAEBLAADLAFEA0IB9QMgAf8DIgH/AwQB/wM8
        AWg8AAMwAU0BJQFeAV8B+wELAU4BnwH/AQABHwE8Af8DUQGnAwQBBYgAAwcBCgM0AVQDTAGSAxIBGQM+
        AWsDUAGdAmIBWAHpAyQBNiwAAwIBAwM4AVwDVAHuAyMB/wMhAf8DQgH1AzwBaDwAAygBPQJYAWEB5gEI
        AUYBkgH/AT0CQAH9A1YBtgMVAR18AAMIAQsDLAFDAz8BbQNBAXIDDwEUAz4BawM2AVkDMwFTAmEBWwHh
        AkYBRQF/NAADOAFcA0IB9QMoAf8DJQH/AwgB/wM9AWk8AAMJAQwCWAFbAcYBDAFLAZkB/wEAASUBQwH/
        A1oB1QMYASF4AAMVAR0DVgG2AmABXAHUAzMBUwNIAYUDMwFTAyYBOQNEAXoCXAFZAckCUwFSAag0AAMC
        AQMDLwFJA0wB8wMoAf8DJwH/A0IB9QM+AWs8AAMNARICTwFRAZwBKwFqAX8B/gEEATQBWQH/A10B7QMu
        AUgIAAMNARIDFAEcAwEBAmAAAwQBBgMyAVECXgFcAc4DXwHgA1UBsgMyAVECSQFKAYkDIgExAlgBVgG7
        A1sByDwAAzgBXQNMAfMDLgH/AyoB/wMOAf8DPAFoAwcBCQFRAlIBpwM0AVQwAAMGAQgDSAGFAUgCYgH2
        AQIBNwFeAf8DWQHyAjwBPQFnAwQBBgNIAYcDSQH+A1cBxQMgAS5kAAMaASQCUwFPAaUBfwF2ASIB/gFt
        AVMBKwH8AmEBWwHhAmEBWwHhAWoBSQErAfwBawFPASsB/AJhAVwB3AJSAVEBpwJGAUUBfwMkATYDAAEB
        LAADLwFJA1kB9QMvAf8DMAH/ARIBDwEMAf8DSAGEAVQCYQHuAVwCYQHcOAADNQFWAQoBTAGYAf8BCAFF
        AZIB/wEUATIBSgH+A0sBkANgAdQDnwH/A24B/gNdAe0DGgEkaAADFwEgAzgBXQJHAUYBgAJSAVEBpwJc
        AVUB6gFzAV8BKAH7AloBWAHAAl4BWwHQAl8BWAHjAmIBWAHpAlwBWgHNAzUBVwMNAREkAAMCAQMDOAFc
        A1QB7gMyAf8CMAEvAf8BDwEOAQ0B/wEAAUABmQH/AQABkwH4Af8BWgJcAc0DGgElAxQBHAMUARwDDwEU
        JwABAQMpAT4CXAFhAdwBCgFIAZUB/wEfATUBRgH+A38B/gOlAf8DoQH/A2kB/gNaAdUDDgETdAADUgGp
        AmEBWwHhAyIBMQNEAXoDNQFVA1ABngJYAVYBuwJfAVoB2wNKAYsDEwEaKAADNgRZAfUBNAIzAf8CTQFO
        Af8BtQGpAaIB/wFZAZ4BugH/AQABlQH4Af8BKQFgAXwB+gEpAWABfAH6ASEBXwGNAfsBWQJcAc8sAAMc
        AScCWAFhAeYDfwH+A6MB/wOxAf8DnQH/AzcB/wNZAfIDOQFgdAACSQFIAYgCYQFdAeIDSgGKAyYBOQM2
        AVkDPwFsAx0BKQNbAcsCWwFZAcQDKQE+KAADKgFBAlsBYQHhAT0BPgE/Af8D3QH/A/wB/wHPAckBxgH/
        AYUBmgGpAf8BAAGeAfUB/wEAAZ4B9wH/AQABqgH+Af8DSgGLHAADBwEKAx8BLQMhATADOAFeA1YBtgNi
        Ae8DsQH/A6cB/wOpAf8BGQEcAR4B/wNaAeQDIwE0AwcBCnQAAzoBYgFtAVMBKwH8AzMBUwM0AVQDPwFs
        AxMBGgJNAU4BlgM2AVkDGgEkAwkBDBAAAwoBDQFQAlEBnwMFAQcIAAMjATQBSAJiAfYBAgG4Av8BKgGN
        AbYB/wHOAcQBvQH/Au0B7AH/A/cB/wHZAc0BxQH/AS4BoQHSAf8BAAGuAfwB/wFaAl4B1QMLAQ8cAAMZ
        ASMDYgHvA8QB/wPJAf8DvwH/A8EB/wO1Af8DmwH/AQcBIQEzAf8BAQEyAVYB/wNZAfIDOAFeeAADFgEf
        AacBRgFAAf0DVgGzA0gBhgMQARUCTQFOAZUDMQFOHAABPQI+AWoBAAGNAfIB/wNZAccDQAFwAycBOgMB
        AQIDJwE7AQABqwHoAf8BCAHEAv8BQAGVAbQB/wHUAcgBwQH/AvQB9QL/AfgB7wH/ASwBqQHaAf8BUgJl
        AfQDHQEpIAADBQEHA1wBzwPZAf8DygH/A8QB/wPGAf8DuAH/A40B/wFoAWoBawH+AQoBRgGPAf8BIQFR
        AXMB/gNYAeZ8AANRAaIDXwHgAzQBVANCAXQDMwFTGAADFwEgAVMCVQGtAVkCZAHsAQABoAH3Af8BAAGd
        AfQB/wEAAaEB9AH/A1ABmgMBAQIEAAMdASoDVQGyARABvgH7Af8BMQGqAdMB/wGWAboBygH/AT0BrgHW
        Af8BDgG3AfkB/wFAAagBsQH9AzgBXCQAAyYBOANlAfQDzgH/A8gB/wPGAf8DwQH/A5cB/wN0Af4DNAFV
        AzsBYwMaASR8AAMZASMCXAFZAc8CYAFcAdQDPwFtAwcBChgAAxkBIwFaAlwBzQErAXgBlwH8AQsBrgH3
        Af8BDQGxAfgB/wFYAl8B4wMHAQkMAAM7AWUBFwG8AfcB/wEVAcEB/QH/AQ8BxAL/ARcByAH9Af8BGwHD
        AfkB/wEcAcQB+wH/AVYCWAG8AwEBAiQAAzsBYwN0AfoDzAH/A8gB/wPJAf8DoAH/A1sB2YwAAzMBUgJW
        AVUBtAMqAUEgAAMQARUBWAJeAd0BJQHUAf4B/wEfAdUB+wH/AT4BcgF5AfgDGwEmDAADOAFeARsBvQH1
        Af8BKgHYAf4B/wFTAmQB8QFSAlQBpgFeAmUB5QEfAdcB9QH/ASsBdAGOAfwDIQEwJAADAwEEAy0BRQNi
        AekDzgH/A80B/wOiAf8DSwGPjAADBAEGAxQBHAMIAQsgAAMHAQkBWgJdAcoBVgJYAbwBOQI6AWABTwJT
        AaUDIwE0DAABNQI2AVgBQgGRAbcB/gFbAl4B0AMmATkEAAMKAQ4DKAE8AT4CPwFsAxEBFywAAxMBGgND
        AXcDUwGqA1gBuQMtAUa8AAMKAQ4cAAMXASADQwF3AwYBCLgAAUIBTQE+BwABPgMAASgDAAFQAwABFAMA
        AQEBAAEBBQAB8BcAA/8BAAX/AY8B/wHwBAAB/AF/AfgBfwH/AYcB/wHwBAAB/AE/AfgBPwH/AYMB/wHw
        BAAB/AE/AfgBHwH/AYAB/wHwBAAB+AEfAfwBDwH/AeABfwHwBAAB4AEfAfwBBwH/AfABPwHwBAABgAEf
        Af8BAwH/AfgBHwHwBAABgAEfAf8BAQH/AfwBDAFwBAABgAEfAf8BwAEfAf4BAAEwBAAB4AEAAf8B4AEf
        Af8BgAEQBAAB+AEAAT8B4AEAAf8BgAUAAf8BgAEfAfgBAAH/AeAFAAH/AYABHwH4AQAB/gYAAf8BgAEe
        ATABAAH+AQABEAQAAf8BgAH+AQABAQH+AQABEAQAAf8BwQH4AQQBAQH/AQABEAQAAf8BwQH4AQ4BAAH/
        AYAB8AQAAf8B4wH8AQ4BAAH/AYAB8AQAAf8B4wH8AQ4BEAH/AeAB8AQAAv8C/gE/Av8B8AQACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>